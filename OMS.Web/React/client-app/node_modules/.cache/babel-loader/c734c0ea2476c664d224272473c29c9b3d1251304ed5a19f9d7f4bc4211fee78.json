{"ast":null,"code":"var _jsxFileName = \"/Users/dean/Documents/source/OMS/OMS.Web/React/client-app/src/LiveOrdersComponent.js\",\n  _s = $RefreshSig$();\n// OrdersComponent.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveOrdersComponent = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const userInfo = {\n      userId: 1,\n      password: \"userPassword\",\n      // Caution with sensitive info\n      groupNum: 100\n    };\n    const fetchOrders = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('/api/data/get-live-orders');\n        if (!response.ok) throw new Error('Network response was not ok.');\n        const data = await response.json();\n        setOrders(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchOrders();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading orders...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error fetching orders: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Order ID: \", order.id, \", Status: \", order.status, \", Quantity: \", order.quantity]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveOrdersComponent, \"6dbvw0Ef/CxExY872coRqwW6h8M=\");\n_c = LiveOrdersComponent;\nexport default LiveOrdersComponent;\nvar _c;\n$RefreshReg$(_c, \"LiveOrdersComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LiveOrdersComponent","_s","orders","setOrders","isLoading","setIsLoading","error","setError","userInfo","userId","password","groupNum","fetchOrders","response","fetch","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","id","status","quantity","_c","$RefreshReg$"],"sources":["/Users/dean/Documents/source/OMS/OMS.Web/React/client-app/src/LiveOrdersComponent.js"],"sourcesContent":["// OrdersComponent.js\n\nimport React, { useState, useEffect } from 'react';\n\nconst LiveOrdersComponent = () => {\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n\n    const userInfo = {\n      userId: 1,\n      password: \"userPassword\", // Caution with sensitive info\n      groupNum: 100\n    };\n\n    const fetchOrders = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('/api/data/get-live-orders');\n        if (!response.ok) throw new Error('Network response was not ok.');\n        const data = await response.json();\n        setOrders(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchOrders();\n  }, []);\n\n  if (isLoading) return <div>Loading orders...</div>;\n  if (error) return <div>Error fetching orders: {error}</div>;\n\n  return (\n    <div>\n      <h2>Orders</h2>\n      <ul>\n        {orders.map(order => (\n          <li key={order.id}>\n            Order ID: {order.id}, Status: {order.status}, Quantity: {order.quantity}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default LiveOrdersComponent;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IAEd,MAAMW,QAAQ,GAAG;MACfC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,cAAc;MAAE;MAC1BC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BP,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MACd,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;QACzD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCf,SAAS,CAACc,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACa,OAAO,CAAC;MACzB,CAAC,SAAS;QACRd,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIR,SAAS,EAAE,oBAAOL,OAAA;IAAAqB,QAAA,EAAK;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAClD,IAAIlB,KAAK,EAAE,oBAAOP,OAAA;IAAAqB,QAAA,GAAK,yBAAuB,EAACd,KAAK;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3D,oBACEzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfzB,OAAA;MAAAqB,QAAA,EACGlB,MAAM,CAACuB,GAAG,CAACC,KAAK,iBACf3B,OAAA;QAAAqB,QAAA,GAAmB,YACP,EAACM,KAAK,CAACC,EAAE,EAAC,YAAU,EAACD,KAAK,CAACE,MAAM,EAAC,cAAY,EAACF,KAAK,CAACG,QAAQ;MAAA,GADhEH,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACvB,EAAA,CA9CID,mBAAmB;AAAA8B,EAAA,GAAnB9B,mBAAmB;AAgDzB,eAAeA,mBAAmB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}