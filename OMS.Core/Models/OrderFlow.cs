using System.ComponentModel.DataAnnotations;
using OMS.Core.Common;

namespace OMS.Core.Models;

[GenerateSerializer]
[Alias("OrderFlow")]
public class OrderFlow
{
    [Id(0)]
    private DateTime _orderTime;

    [Key]
    [Id(15)]
    public int OrderFlowId { get; set; }

    [Id(1)]
    // PlatformOrderID generate by platform of record
    public int PlatformOrderID { get; set; }

    // In the case of NinjaTrader as the execution platformn - this would be the filled order ID returned on execution
    [Id(2)]
    public int ExecutedOrderID { get; set; }

    // Token for successful trader authentication
    [Id(3)]
    public int AuthToken { get; set; }

    // ID generated by the order manager
    [Id(4)]
    public int OrderManagerID { get; set; }
    [Id(5)]
    public double Leverage { get; set; }
    [Id(6)]
    public int Opposite { get; set; }

    // Related orders are available to handle split orders  ex- your 5 long and you sell 3 
    [Id(7)]
    public int RelatedOrderID { get; set; }
    [Id(8)]
    public int UserID { get; set; }
    [Id(9)]
    public int GroupID { get; set; }
    public DateTime OrderTime
    {
        get => _orderTime;
        set => _orderTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    }
    [Id(10)]
    public string Instrument { get; set; } = "";
    [Id(11)]
    public double OrderPX { get; set; }

    // Market, Limit, Stop
    [Id(12)]
    public OrderType OrderType { get; set; }

    //Buy Sell
    [Id(13)]
    public OrderAction OrderAction { get; set; }
    [Id(14)]
    public int Quantity { get; set; }
}
